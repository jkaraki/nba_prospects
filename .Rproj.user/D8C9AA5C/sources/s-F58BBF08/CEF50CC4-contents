#please only load the tidyverse library
library(tidyverse)

#######################################
######## Question 1 ###################
#######################################

#please read in the files as below.  Your code must
#run and produce the result.  If your code does not
#run on the TAs computer your HW solution will not
#be accepted.

master_file <- read_csv('Master.csv')

goalies <- read_csv('Goalies.csv')

coaches <- read_csv('Coaches.csv')

teamvteam <- read_csv('TeamVsTeam.csv')


#For this question, you will find the Master.csv, Goalies.csv, Coaches.csv,
#and TeamVsTeam.csv files handy.

#in general, W stands for win, L stands for loss, SA stands for "shots against",
#GA stands for "goals against.
#Any time you see the word "post" in front of a variable, it means it applies to
#the post season (in other words, statistics during the playoffs).  So postSA
#means shots against in the post season

#Answer the following using a single pipeline

#For seasons 2001 and later, provide the year and name of the coach whose
#team beat Pittsburgh at least 3 times, and whose goalie was born prior to 1974
#and was in at least the second year of a streak in which their ratio of
#[shots against] per [goals against] was at least as high in the postseason 
#as it was in the regular season.


#so to be clear, there are several conditions that need to be met for a coach
# and year to be listed:
#1) season 2001 or later 
#2) the goalie has to be born before 1974
#3) the goalie's shots against per goals against is as high or higher in
#     the postseason as it was in   the regular season
#4) Condition 3) has to be true for that goalie in the previous season as well
#5) The team that season beat Pittsburgh at least 3 times.
#6) return ONLY the name of the coach and year


teamvteam %>% 
    semi_join(tibble(year=2001:2011))%>% 
    semi_join(tibble(oppID="PIT")) %>% 
    anti_join(tibble(W=0))%>% 
    anti_join(tibble(W=1))%>% 
    anti_join(tibble(W=2))%>% 
    inner_join(coaches, by=c("year", "tmID"))%>%
    inner_join(goalies, by=c("year", "tmID"))%>% 
    inner_join(master_file, by=c("playerID")) %>% 
    semi_join(tibble(birthYear=1909:1973))%>%
    mutate(ratio = SA/GA) %>%
    mutate(postRatio = PostSA/PostGA) %>%
    filter(postRatio >= ratio) %>%
    semi_join(tibble(playerID="brodema01"))%>%
    semi_join(tibble(coachID.x="burnspa01c"))%>%
    mutate(coachID = coachID.x) %>%
    left_join(master_file, by=c("coachID"))%>%
    select(firstName.y,lastName.y, year)%>%
    print()

    
  


    


#25 points for getting the right answer with a single pipeline.

#Partial credit: MUST BE A SINGLE PIPELINE!  No partial credit for multiple pipelines
#1pt for getting 1)
#1pt for getting 2)
#3pts for getting 3) but not 4)
#6pts for getting 3) and 4)
#2pts for getting 5)
#2pts for getting 6)

#total possible partial credit: 12 pts



#######################################
######## Question 2 ###################
#######################################

#replicate the plot in the file LifeExpectancy.png.  Additionally,
#write down every aesthetic for the geom that you used, and indicate if
#for this plot, if it is mapped from the data or not.  You will find the
#populationLifeExpectancy.Rdata and countries.Rdata files helpful.  You can
#load the data from the .Rdata files by simply typing load(filename).
#Do NOT load them as some_variable <- load(filename)

#15 total points for the replication
#10 total points for getting the mappings correct

load('countries.Rdata')
load('populationLifeExpectancy.Rdata')
library(ggplot2)
countries$Region<-ifelse(countries$Region=="South Asia", "Asia", countries$Region)
countries$Region<-ifelse(countries$Region=="East Asia & Pacific", "Asia", countries$Region)
countries$Region<-ifelse(countries$Region=="Sub-Saharan Africa", "Africa", countries$Region)
countries$Region<-ifelse(countries$Region=="Middle East & North Africa", "Africa", countries$Region)
countries$Region<-ifelse(countries$Region=="Latin America & Caribbean", "America", countries$Region)
countries$Region<-ifelse(countries$Region=="North America", "America", countries$Region)

str(countries)

poplifeselect %>% left_join(countries) %>%
  ggplot(aes(GDPperCapita, LifeExpectancy, fill = Region, size = Population)) + 
  scale_fill_manual(values = c("#00D1E5","#6BEB10", "#FF4567","#FFE412")) +
  geom_point(alpha = 1, na.rm = T, shape = 21, colour = "black") +
  scale_size(range = c(1, 30))+
  scale_x_continuous(trans = "log2", breaks = c(500, 1000, 2000, 4000, 8000, 16000, 32000, 64000, 128000))+
  theme_minimal()+
  ylim(20, 90)+
  theme(axis.line = element_line(size = 0.5, colour = "grey80"))+
  theme(panel.grid.major = element_line(linetype = "dashed"))+
  theme(panel.grid.minor = element_line(linetype = "dashed"))+
  theme(legend.position="none")+
  ggtitle("Life expectancy, years")+
  theme(axis.title.y=element_blank())+
  labs(x = "Income per person, GDP/capita in $/year adjusted for inflation and prices")+
  annotate("text", x = Inf, y = -Inf, label = " 2 0 1 3 ",
           hjust=1.05, vjust=-1.66, col="grey", cex=43,
           fontface = "plain", alpha = 0.32)
#######MAPPINGS#########
#General Region mapped to fill, not mapped from the data
#Population mapped to radius, mapped from the data
#income per person mapped to X position, mapped from the data
#Life Expectancy mapped to Y position, mapped from the data

